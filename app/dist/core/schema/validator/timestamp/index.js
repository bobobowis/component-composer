"use strict";function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var InvalidTimestampError=require("./error/invalid"),SchemaValidatorTimestamp=function(){function a(){_classCallCheck(this,a)}return _createClass(a,[{key:"valid",value:function valid(a,b){if("string"!=typeof b){var d="Invalid type: \"".concat(_typeof(b),"\", string expected");throw new InvalidTimestampError(d)}var c=new Date(b);if("min"in a&&c.getTime()<new Date(a.min).getTime()){var e="Timestamp must be at least: \"".concat(a.min,"\"");throw new InvalidTimestampError(e)}if("max"in a&&c.getTime()>new Date(a.max).getTime()){var f="Timestamp can't be more then: \"".concat(a.max,"\"");throw new InvalidTimestampError(f)}if("gt"in a&&c.getTime()>new Date(a.gt).getTime()){var g="Timestamp must be more then: \"".concat(a.gt,"\" long");throw new InvalidTimestampError(g)}if("lt"in a&&c.getTime()<new Date(a.lt).getTime()){var h="Timestamp must be less then: \"".concat(a.lt,"\" long");throw new InvalidTimestampError(h)}if(a["enum"]&&!a["enum"].includes(b)){var i="Expected one of the enumeral values: \"".concat(a["enum"],"\"");throw new InvalidTimestampError(i)}}}]),a}();module.exports=SchemaValidatorTimestamp;