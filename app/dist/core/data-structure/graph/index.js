"use strict";function _objectSpread(a){for(var b=1;b<arguments.length;b++){var c=null==arguments[b]?{}:arguments[b],d=Object.keys(c);"function"==typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable}))),d.forEach(function(b){_defineProperty(a,b,c[b])})}return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var NodeNotExist=require("./error/node-not-exists"),Graph=function(){function a(b){var c=b.composer,d=b.edges,e=b.nodes,f=b.queue,g=b.isDirected;_classCallCheck(this,a),this.composer=c,this.edges=d,this.nodes=e,this.queue=f,this.isDirected=g}return _createClass(a,[{key:"totalNodes",value:function totalNodes(){return this.nodes.count()}},{key:"printGraph",value:function printGraph(){var a=this.edges.toJSON();for(var i in a){var b="".concat(i," ->"),c=!0,d=!1,e=void 0;try{for(var f,g,h=a[i][Symbol.iterator]();!(c=(f=h.next()).done);c=!0)g=f.value,b+=" ".concat(g.target," (").concat(JSON.stringify(g.payload),")")}catch(a){d=!0,e=a}finally{try{c||null==h["return"]||h["return"]()}finally{if(d)throw e}}console.log(b)}}},{key:"addNode",value:function addNode(a){this.nodes.add({id:a.id,element:this.composer.compose("data-structure/node",a)})}},{key:"addEdge",value:function addEdge(a){var b=a.source,c=a.target,d=a.payload;if(!this.nodes.get(b))throw new NodeNotExist("Source node does not exists");else if(!this.nodes.get(c))throw new NodeNotExist("Target node does not exists");var e=this.composer.compose("data-structure/edge",{source:b,target:c,payload:d});if(this.edges.add({id:b,element:e}),!this.isDirected){var f=this.composer.compose("data-structure/edge",{source:c,target:b,payload:d});this.edges.add({id:c,element:f})}}},{key:"bfs",value:function bfs(a){var b={},c=[];if(this.queue.reset(),!this.nodes.get(a))throw new NodeNotExist("Start node does not exists");for(b[a]=!0,this.queue.enqueue(a);!this.queue.isEmpty();){var k=this.queue.dequeue();c.push(k);var l=this.edges.get(k);if(l){var d=!0,e=!1,f=void 0;try{for(var g,h=l[Symbol.iterator]();!(d=(g=h.next()).done);d=!0){var i=g.value,j=i.target;b[j]||this.queue.enqueue(j)}}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}}}return c}},{key:"dfs",value:function dfs(a){var b=[];if(!this.nodes.get(a))throw new NodeNotExist("Start node does not exists");return this.recursiveDFS(a,{},b),b}},{key:"recursiveDFS",value:function recursiveDFS(a,b,c){b[a]=!0,c.push(a);var d=this.edges.get(a);if(d){var e=!0,f=!1,g=void 0;try{for(var h,i=d[Symbol.iterator]();!(e=(h=i.next()).done);e=!0){var j=h.value,k=j.target;b[k]||this.recursiveDFS(k,b,c)}}catch(a){f=!0,g=a}finally{try{e||null==i["return"]||i["return"]()}finally{if(f)throw g}}}}},{key:"reduceEdgeArrayToLinks",value:function reduceEdgeArrayToLinks(a,b,c){var d=Object.keys(this.edges)[c],e=b.map(function(a){return a.source?_objectSpread({source:d},a):a});return a.concat(e)}},{key:"edgesToLinks",value:function edgesToLinks(){var a=this.edges.toArray().values,b=a.reduce(this.reduceEdgeArrayToLinks.bind(this),[]);return b}},{key:"serialize",value:function serialize(){var a=this.nodes.toArray().values,b=this.edgesToLinks();return{nodes:a,links:b}}},{key:Symbol.toStringTag,get:function get(){return"Graph"}}]),a}();module.exports=Graph;