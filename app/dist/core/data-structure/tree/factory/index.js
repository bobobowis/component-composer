"use strict";function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(b,!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var Tree=require(".."),TreeFactory=function(){function a(b){var c=b.composer,d=b.associativeArrayFactory,e=b.multipleAssociativeArrayFactory,f=b.queueFactory,g=b.deepassign;_classCallCheck(this,a),this.composer=c,this.associativeArrayFactory=d,this.multipleAssociativeArrayFactory=e,this.queueFactory=f,this.deepassign=g,this[Symbol["for"]("schema")]="data-structure/tree"}return _createClass(a,[{key:"createEdges",value:function createEdges(a){var b=a.edges,c=b.items;return this.multipleAssociativeArrayFactory.create(c)}},{key:"createNodes",value:function createNodes(a){var b=a.nodes,c=b.items;return this.associativeArrayFactory.create(c)}},{key:"createQueue",value:function createQueue(){return this.queueFactory.create()}},{key:"create",value:function create(a){var b=this.composer.compose(this[Symbol["for"]("schema")],a);return new Tree(_objectSpread({},b,{composer:this.composer,edges:this.createEdges(b),nodes:this.createNodes(b),queue:this.createQueue(),deepassign:this.deepassign}))}},{key:Symbol.toStringTag,get:function get(){return"TreeFactory"}}]),a}();module.exports=TreeFactory;