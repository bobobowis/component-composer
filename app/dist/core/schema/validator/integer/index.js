"use strict";function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var InvalidIntegerError=require("./error/invalid"),SchemaValidatorInteger=function(){function a(){_classCallCheck(this,a)}return _createClass(a,[{key:"valid",value:function valid(a,b){if("number"!=typeof b){var c="Invalid type: \"".concat(_typeof(b),"\", number expected");throw new InvalidIntegerError(c)}if(b!==parseInt(b)){throw new InvalidIntegerError("Integer expected, found decimals")}if(a.unsigned&&0>b){throw new InvalidIntegerError("Expected an unsigned integer ")}if("min"in a&&b<a.min){var d="Integer must be minimum: \"".concat(a.min,"\"");throw new InvalidIntegerError(d)}if("max"in a&&b>a.max){var e="Integer can't be more then: \"".concat(a.max,"\"");throw new InvalidIntegerError(e)}if("gt"in a&&b<a.gt){var f="Integer must be more then: \"".concat(a.gt,"\"");throw new InvalidIntegerError(f)}if("lt"in a&&b>a.lt){var g="Integer must be less then: \"".concat(a.lt,"\"");throw new InvalidIntegerError(g)}if(a["enum"]&&!a["enum"].includes(b)){var h="Expected one of the enumeral values: \"".concat(a["enum"],"\"");throw new InvalidIntegerError(h)}}}]),a}();module.exports=SchemaValidatorInteger;